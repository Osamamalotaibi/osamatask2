# =========================
# ? Core
# =========================
micronaut.application.name=osamatask
micronaut.server.port=8085

# =========================
# ?? Database (MySQL)
# =========================
datasources.default.url=jdbc:mysql://localhost:3306/taskapi?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
datasources.default.username=root
datasources.default.password=Osama1ot
datasources.default.driver-class-name=com.mysql.cj.jdbc.Driver

# =========================
# ? JPA / Hibernate
# =========================
jpa.default.properties.hibernate.hbm2ddl.auto=update
jpa.default.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# jpa.default.properties.hibernate.show_sql=true
# jpa.default.properties.hibernate.format_sql=true

# =========================
# ? Redis Cache
# =========================
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.cache.type=redis
redis.uri=redis://localhost:6379

micronaut.caches.tasksByUser.enabled=true
micronaut.caches.tasksByUser.maximum-size=1000
micronaut.caches.tasksByUser.expire-after-write=10m

redis.caches.tasksByUser.expire-after-write=12h
redis.caches.tasksCompletedByUser.expire-after-write=12h
redis.caches.tasksCompleted.expire-after-write=12h
redis.caches.tasksAll.expire-after-write=12h

# =========================
# ? Security / JWT
# =========================
micronaut.security.token.jwt.enabled=true
micronaut.security.token.bearer.enabled=true
micronaut.security.token.jwt.signatures.secret.generator.secret=Q3hH6vJ7fA2uW9kZp4N8rT1yB6mC0sL5pD7eF2qH
micronaut.security.token.roles-name=roles

# =========================
# ? Security URL Rules
# =========================
# - /auth/**
# - /swagger/**
# - /swagger-ui/**
# - /redoc/**
# - /rapidoc/**
# - /v3/api-docs/**
# - /manage/**      (routes)
# - /error
# - /api/**

micronaut.security.intercept-url-map[0].pattern=/auth/**
micronaut.security.intercept-url-map[0].access[0]=isAnonymous()

micronaut.security.intercept-url-map[1].pattern=/swagger/**
micronaut.security.intercept-url-map[1].access[0]=isAnonymous()

micronaut.security.intercept-url-map[2].pattern=/swagger-ui/**
micronaut.security.intercept-url-map[2].access[0]=isAnonymous()

micronaut.security.intercept-url-map[3].pattern=/redoc/**
micronaut.security.intercept-url-map[3].access[0]=isAnonymous()

micronaut.security.intercept-url-map[4].pattern=/rapidoc/**
micronaut.security.intercept-url-map[4].access[0]=isAnonymous()

micronaut.security.intercept-url-map[5].pattern=/v3/api-docs/**
micronaut.security.intercept-url-map[5].access[0]=isAnonymous()

micronaut.security.intercept-url-map[6].pattern=/manage/**
micronaut.security.intercept-url-map[6].access[0]=isAnonymous()

micronaut.security.intercept-url-map[7].pattern=/error
micronaut.security.intercept-url-map[7].access[0]=isAnonymous()

# ???: ??? ????? /api/** ??? ??
micronaut.security.intercept-url-map[8].pattern=/api/**
micronaut.security.intercept-url-map[8].access[0]=ROLE_USER

# =========================
# ? OpenAPI / Swagger UI
# =========================
micronaut.openapi.views.enabled=true
# ??? ?????? Swagger UI / Redoc / RapiDoc
micronaut.openapi.views.spec=swagger-ui.enabled=true,redoc.enabled=true,rapidoc.enabled=true

# ????? ????? ??? OpenAPI (YAML / JSON)
micronaut.router.static-resources.swagger.enabled=true
micronaut.router.static-resources.swagger.paths=classpath:META-INF/swagger
micronaut.router.static-resources.swagger.mapping=/swagger/**

# Swagger UI
micronaut.router.static-resources.swagger-ui.enabled=true
micronaut.router.static-resources.swagger-ui.paths=classpath:META-INF/swagger/views/swagger-ui
micronaut.router.static-resources.swagger-ui.mapping=/swagger-ui/**

# Redoc UI
micronaut.router.static-resources.redoc.enabled=true
micronaut.router.static-resources.redoc.paths=classpath:META-INF/swagger/views/redoc
micronaut.router.static-resources.redoc.mapping=/redoc/**

# RapiDoc UI
micronaut.router.static-resources.rapidoc.enabled=true
micronaut.router.static-resources.rapidoc.paths=classpath:META-INF/swagger/views/rapidoc
micronaut.router.static-resources.rapidoc.mapping=/rapidoc/**

# =========================
# ? Management Endpoints (Routes)
# =========================
endpoints.all.path=/manage
endpoints.routes.enabled=true
endpoints.routes.sensitive=false

# =========================
# ? ???????:
# - ??? swagger.yml ?? swagger.json ????? ???? META-INF/swagger
#   ????:
#   http://localhost:8085/swagger/swagger.yml
# - Swagger UI:
#   http://localhost:8085/swagger-ui?url=/swagger/swagger.yml
# - Redoc:
#   http://localhost:8085/redoc?url=/swagger/swagger.yml
# - Rapidoc:
#   http://localhost:8085/rapidoc?url=/swagger/swagger.yml
# - ???? ????????:
#   http://localhost:8085/manage/routes
# =========================
